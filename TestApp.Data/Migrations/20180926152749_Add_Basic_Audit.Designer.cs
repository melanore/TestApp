// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestApp.Data;

namespace TestApp.Data.Migrations
{
    [DbContext(typeof(TestAppDbContext))]
    [Migration("20180926152749_Add_Basic_Audit")]
    partial class Add_Basic_Audit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestApp.Data.Entities.Address", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("AddressType")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Country")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UpdatedBy")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedDateTime");

                    b.Property<int>("Version");

                    b.Property<string>("Zip")
                        .HasColumnName("ZIP")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CustomerId", "AddressType");

                    b.ToTable("Addresses");

                    b.HasDiscriminator<string>("AddressType").HasValue("Address");
                });

            modelBuilder.Entity("TestApp.Data.Entities.Customer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CustomerId")
                        .HasColumnType("varchar(5)")
                        .HasComputedColumnSql("CAST(ISNULL([dbo].[CustomerNumber](dbID), 'AA000') AS varchar(5)) PERSISTED")
                        .HasMaxLength(5);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Country")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UpdatedBy")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedDateTime");

                    b.Property<int>("Version");

                    b.Property<string>("Zip")
                        .HasColumnName("ZIP")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("dbID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id", "Name");

                    b.HasAlternateKey("Id")
                        .HasName("IX_CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("TestApp.Data.Entities.DeliveryAddress", b =>
                {
                    b.HasBaseType("TestApp.Data.Entities.Address");


                    b.ToTable("DeliveryAddress");

                    b.HasDiscriminator().HasValue("D");
                });

            modelBuilder.Entity("TestApp.Data.Entities.InvoiceAddress", b =>
                {
                    b.HasBaseType("TestApp.Data.Entities.Address");


                    b.ToTable("InvoiceAddress");

                    b.HasDiscriminator().HasValue("I");
                });

            modelBuilder.Entity("TestApp.Data.Entities.ServiceAddress", b =>
                {
                    b.HasBaseType("TestApp.Data.Entities.Address");


                    b.ToTable("ServiceAddress");

                    b.HasDiscriminator().HasValue("S");
                });

            modelBuilder.Entity("TestApp.Data.Entities.Address", b =>
                {
                    b.HasOne("TestApp.Data.Entities.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
